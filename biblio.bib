@inproceedings{deeplog,
	author = {Du, Min and Li, Feifei and Zheng, Guineng and Srikumar, Vivek},
	title = {DeepLog: Anomaly Detection and Diagnosis from System Logs through Deep Learning},
	year = {2017},
	isbn = {9781450349468},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3133956.3134015},
	doi = {10.1145/3133956.3134015},
	abstract = {Anomaly detection is a critical step towards building a secure and trustworthy system. The primary purpose of a system log is to record system states and significant events at various critical points to help debug system failures and perform root cause analysis. Such log data is universally available in nearly all computer systems. Log data is an important and valuable resource for understanding system status and performance issues; therefore, the various system logs are naturally excellent source of information for online monitoring and anomaly detection. We propose DeepLog, a deep neural network model utilizing Long Short-Term Memory (LSTM), to model a system log as a natural language sequence. This allows DeepLog to automatically learn log patterns from normal execution, and detect anomalies when log patterns deviate from the model trained from log data under normal execution. In addition, we demonstrate how to incrementally update the DeepLog model in an online fashion so that it can adapt to new log patterns over time. Furthermore, DeepLog constructs workflows from the underlying system log so that once an anomaly is detected, users can diagnose the detected anomaly and perform root cause analysis effectively. Extensive experimental evaluations over large log data have shown that DeepLog has outperformed other existing log-based anomaly detection methods based on traditional data mining methodologies.},
	booktitle = {Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security},
	pages = {1285–1298},
	numpages = {14},
	keywords = {log data analysis, deep learning, anomaly detection},
	location = {Dallas, Texas, USA},
	series = {CCS '17}
}

@misc{experiencereport,
  doi = {10.48550/ARXIV.2107.05908},
  url = {https://arxiv.org/abs/2107.05908},
  author = {Chen, Zhuangbin and Liu, Jinyang and Gu, Wenwei and Su, Yuxin and Lyu, Michael R.},
  keywords = {Software Engineering (cs.SE), Machine Learning (cs.LG), FOS: Computer and information sciences, FOS: Computer and information sciences},
  title = {Experience Report: Deep Learning-based System Log Analysis for Anomaly Detection},
  publisher = {arXiv},
  year = {2021}
}

@inproceedings{logrobust,
	author = {Zhang, Xu and Xu, Yong and Lin, Qingwei and Qiao, Bo and Zhang, Hongyu and Dang, Yingnong and Xie, Chunyu and Yang, Xinsheng and Cheng, Qian and Li, Ze and Chen, Junjie and He, Xiaoting and Yao, Randolph and Lou, Jian-Guang and Chintalapati, Murali and Shen, Furao and Zhang, Dongmei},
	title = {Robust Log-Based Anomaly Detection on Unstable Log Data},
	year = {2019},
	isbn = {9781450355728},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3338906.3338931},
	doi = {10.1145/3338906.3338931},
	abstract = {Logs are widely used by large and complex software-intensive systems for troubleshooting. There have been a lot of studies on log-based anomaly detection. To detect the anomalies, the existing methods mainly construct a detection model using log event data extracted from historical logs. However, we find that the existing methods do not work well in practice. These methods have the close-world assumption, which assumes that the log data is stable over time and the set of distinct log events is known. However, our empirical study shows that in practice, log data often contains previously unseen log events or log sequences. The instability of log data comes from two sources: 1) the evolution of logging statements, and 2) the processing noise in log data. In this paper, we propose a new log-based anomaly detection approach, called LogRobust. LogRobust extracts semantic information of log events and represents them as semantic vectors. It then detects anomalies by utilizing an attention-based Bi-LSTM model, which has the ability to capture the contextual information in the log sequences and automatically learn the importance of different log events. In this way, LogRobust is able to identify and handle unstable log events and sequences. We have evaluated LogRobust using logs collected from the Hadoop system and an actual online service system of Microsoft. The experimental results show that the proposed approach can well address the problem of log instability and achieve accurate and robust results on real-world, ever-changing log data.},
	booktitle = {Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
	pages = {807–817},
	numpages = {11},
	keywords = {Data Quality, Log Analysis, Deep Learning, Anomaly Detection, Log Instability},
	location = {Tallinn, Estonia},
	series = {ESEC/FSE 2019}
}

@article{spell,
	author = {Du, Min and Li, Feifei},
	journal = {IEEE Transactions on Knowledge and Data Engineering}, 
	title = {Spell: Online Streaming Parsing of Large Unstructured System Logs}, 
	year = {2019},
	volume = {31},
	number = {11},
	pages = {2213-2227},
	doi = {10.1109/TKDE.2018.2875442}
}

@inproceedings{drain,
	author = {He, Pinjia and Zhu, Jieming and Zheng, Zibin and Lyu, Michael R.},
	booktitle = {2017 IEEE International Conference on Web Services (ICWS)}, 
	title = {Drain: An Online Log Parsing Approach with Fixed Depth Tree}, 
	year = {2017},
	pages = {33-40},
	doi = {10.1109/ICWS.2017.13}
}

@inproceedings{isolationforest,
	author = {Liu, Fei Tony and Ting, Kai and Zhou, Zhi-Hua},
	year = {2009},
	month = {01},
	booktitle = {Eighth IEEE International Conference on Data Mining},
	pages = {413 - 422},
	title = {Isolation Forest},
	doi = {10.1109/ICDM.2008.17}
}

@misc{word2vec,
  doi = {10.48550/ARXIV.1301.3781},
  url = {https://arxiv.org/abs/1301.3781},
  author = {Mikolov, Tomas and Chen, Kai and Corrado, Greg and Dean, Jeffrey},
  keywords = {Computation and Language (cs.CL), FOS: Computer and information sciences, FOS: Computer and information sciences},
  title = {Efficient Estimation of Word Representations in Vector Space},
  publisher = {arXiv},
  year = {2013},
  copyright = {arXiv.org perpetual, non-exclusive license}
}

@article{autoencoder,
	title = {Unsupervised log message anomaly detection},
	journal = {ICT Express},
	volume = {6},
	number = {3},
	pages = {229-237},
	year = {2020},
	issn = {2405-9595},
	doi = {https://doi.org/10.1016/j.icte.2020.06.003},
	url = {https://www.sciencedirect.com/science/article/pii/S2405959520300643},
	author = {Amir Farzad and T. Aaron Gulliver},
	keywords = {Anomaly detection, Classification, Deep learning, Log messages, Unsupervised learning},
	abstract = {Log messages are now broadly used in cloud and software systems. They are important for classification and anomaly detection as millions of logs are generated each day. In this paper, an unsupervised model for log message anomaly detection is proposed which employs Isolation Forest and two deep Autoencoder networks. The Autoencoder networks are used for training and feature extraction, and then for anomaly detection, while Isolation Forest is used for positive sample prediction. The proposed model is evaluated using the BGL, Openstack and Thunderbird log message data sets. The results obtained show that the number of negative samples predicted to be positive is low, especially with Isolation Forest and one Autoencoder. Further, the results are better than with other well-known models.}
}

@article{obstacles,
  title={Obstacles in moving to agile software development methods; at a glance},
  author={Gandomani, Taghi Javdani and Zulzalil, Hazura and Ghani, Abdul Azim Abdul and Sultan, Abu Bakar Md and Nafchi, Mina Ziaei},
  journal={Journal of Computer Science},
  volume={9},
  number={5},
  pages={620},
  year={2013},
  publisher={Science Publications}
}

@InProceedings{waterfall,
	author="Petersen, Kai and Wohlin, Claes and Baca, Dejan",
	editor="Bomarius, Frank and Oivo, Markku and Jaring, P{\"a}ivi and Abrahamsson, Pekka",
	title="The Waterfall Model in Large-Scale Development",
	booktitle="Product-Focused Software Process Improvement",
	year="2009",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="386--400",
	abstract="Waterfall development is still a widely used way of working in software development companies. Many problems have been reported related to the model. Commonly accepted problems are for example to cope with change and that defects all too often are detected too late in the software development process. However, many of the problems mentioned in literature are based on beliefs and experiences, and not on empirical evidence. To address this research gap, we compare the problems in literature with the results of a case study at Ericsson AB in Sweden, investigating issues in the waterfall model. The case study aims at validating or contradicting the beliefs of what the problems are in waterfall development through empirical research.",
	isbn="978-3-642-02152-7"
}

@ARTICLE{ssdm,
  author={Moyo, Sibonile and Mnkandla, Ernest},
  journal={IEEE Access}, 
  title={A Novel Lightweight Solo Software Development Methodology With Optimum Security Practices}, 
  year={2020},
  volume={8},
  pages={33735-33747},
  doi={10.1109/ACCESS.2020.2971000}
}

@article{agilesolo,
  title={Agile solo-defining and evaluating an agile software development process for a single software developer},
  author={Nystr{\"o}m, Anna},
  year={2011},
  publisher={Chalmers University of Technology}
}

@article{futurtravail,
	author={Juan Sebastián Carbonell},
	title={Le futur du travail},
	year={2022},
	url={http://journals.openedition.org/lectures/56700},
	doi={10.4000/lectures.56700}
}